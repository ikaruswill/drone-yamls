kind: pipeline
name: linux-arm
type: kubernetes

platform:
  os: linux
  arch: arm

clone:
  depth: 1

steps:
- name: build frontend
  image: node:14.5.0
  commands:
  - ./wizard.sh -a
  - rm -rf frontend/node_modules
  resources:
    requests:
      cpu: 100
      memory: 400MiB
    limits:
      cpu: 1000
      memory: 400MiB

- name: build backend
  image: golang:1.14.3
  environment:
    GOOS: linux
    GOARCH: arm
    GOARM: '7'
  commands:
  - ./wizard.sh -c
  - rm -rf frontend/build
  resources:
    requests:
      cpu: 100
      memory: 200MiB
    limits:
      cpu: 1000
      memory: 200MiB

- name: publish
  image: plugins/docker
  resources:
    requests:
      cpu: 100
      memory: 100MiB
    limits:
      cpu: 100
      memory: 100MiB
  settings:
    repo: ${DRONE_REPO}
    dockerfile: Dockerfile
    auto_tag: true
    auto_tag_suffix: linux-arm
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password

node_selector:
  kubernetes.io/arch: arm

trigger:
  ref:
  - refs/heads/master
  - refs/tags/*

---
kind: pipeline
name: linux-arm64
type: kubernetes

platform:
  os: linux
  arch: arm64

clone:
  depth: 1

steps:
- name: build frontend
  image: node:14.5.0
  commands:
  - ./wizard.sh -a
  - rm -rf frontend/node_modules
  resources:
    requests:
      cpu: 100
      memory: 300MiB
    limits:
      cpu: 1000
      memory: 300MiB

- name: build backend
  image: golang:1.14.3
  environment:
    GOOS: linux
    GOARCH: arm64
    # GOARM: '7'
  commands:
  - ./wizard.sh -c
  - rm -rf frontend/build
  resources:
    requests:
      cpu: 100
      memory: 200MiB
    limits:
      cpu: 1000
      memory: 200MiB

- name: publish
  image: plugins/docker
  resources:
    requests:
      cpu: 100
      memory: 100MiB
    limits:
      cpu: 100
      memory: 100MiB
  settings:
    repo: ${DRONE_REPO}
    dockerfile: Dockerfile
    auto_tag: true
    auto_tag_suffix: linux-arm64
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password

node_selector:
  kubernetes.io/arch: arm64

trigger:
  ref:
  - refs/heads/master
  - refs/tags/*

---
kind: pipeline
name: manifests
type: kubernetes

platform:
  os: linux
  arch: arm

clone:
  disable: true

steps:
- name: generate manifest
  image: alpine
  environment:
    IMAGE: ${DRONE_REPO_NAME}
  commands:
  - |
    wget -qO - https://raw.githubusercontent.com/ikaruswill/drone-manifests/master/manifest.tmpl \
    | sed -e "s/\$${IMAGE}/$${IMAGE}/" > manifest.tmpl

- name: push manifest
  pull: always
  image: plugins/manifest:1.4
  settings:
    auto_tag: true
    ignore_missing: true
    spec: manifest.tmpl
    platforms:
    - linux/arm
    - linux/arm64
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password

node_selector:
  kubernetes.io/arch: arm

trigger:
  ref:
  - refs/heads/master
  - refs/tags/*

depends_on:
- linux-arm
- linux-arm64


